<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="vintasoftLogoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        vpVbI8nKnkAAAAAASUVORK5CYII=
</value>
  </data>
  <data name="decriptionRichTextBox.Text" xml:space="preserve">
    <value>This demo demonstrates the following SDK possibilities:

1. Recognize 1D and 2D barcodes from image:
 - 131 barcode symbologies and subsets are supported: Code 39, Code 128, DataMatrix, QR, PDF417, etc
 - Load image from image file or image-resource of PDF document
 - Set barcode symbologies to search
 - Search unknown linear barcodes
 - Set recognition settings: 
    - manual/iteration/automatic recognition
    - scan interval
    - scan directions
    - expected barcodes
    - binarization threshold
    - threads count 
    - basic processing functions: erode, invert, remove peas
    - advanced barcode decoding settings
 - Show recognition results:
    - draw barcode bounding box
    - get barcode value
    - decode GS1 barcode value
    - show non-data flags in barcode value (Structured Append, Linkage, FNC1, Macro, etc)
    - show barcode value items
    - interpret ECI characters
    - advanced parameters (corrected errors, matrix size, cell size, narrow bar size, etc)
 - Inspect the barcode print quality using ISO15145 and ISO15416 quality tests
 
2. Generate 1D and 2D barcode:
 - 94 barcode symbologies and subsets are supported: Code 39, Code 128, DataMatrix, QR, PDF417, etc
 - Set barcode value
 - Add non-data flags to barcode value (Structured Append, Linkage, FNC1, Macro, etc)
 - Add text encoding information to barcode value (ECI Character)
 - Draw barcode value on image
 - Set bar width, barcode height
 - Automatic or fixed symbol size of 2D barcodes
 - Set error correction level
 - Set encoding mode of 2D barcode (text, binary, etc)
 - Encode GS1 value
 - Set advanced parameters (bars ratio, optional check sum, etc)
 - Set background/foreground color
 - Set padding
 - Set output image pixel format
 - Save barcode image to image file</value>
  </data>
</root>